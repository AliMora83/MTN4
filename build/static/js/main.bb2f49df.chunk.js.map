{"version":3,"sources":["firebase-config.js","services/book.services.js","components/AddBook.js","components/BooksList.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","bookCollectionRef","collection","addBooks","newBook","addDoc","updateBook","id","updatedBook","bookDoc","doc","updateDoc","deleteBook","deleteDoc","getAllBooks","getDocs","getBook","getDoc","AddBook","setBookId","useState","title","setTitle","author","setAuthor","date","setDate","file","setFile","status","setStatus","flag","setFlag","error","msg","message","setMessage","handleSubmit","e","a","preventDefault","console","log","undefined","BookDataService","editHandler","docSnap","data","useEffect","className","Alert","variant","dismissible","onClose","Form","onSubmit","Group","controlId","InputGroup","Text","Control","type","placeholder","value","onChange","target","ButtonGroup","Button","disabled","onClick","BooksList","getBookId","books","setBooks","getBooks","docs","map","deleteHandler","Table","striped","bordered","hover","size","index","subject","files","App","bookId","Navbar","bg","Container","Brand","href","src","alt","style","width","Row","Col","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb2f49df.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey:\n    \"AIzaSyDqw2SYZJIDadrsiVCEXZfj8TmF6ttCVe8\",\n  authDomain: \"edutech-f4ece.firebaseapp.com\",\n  databaseURL:\n    \"https://edutech-f4ece-default-rtdb.firebaseio.com\",\n  projectId: \"edutech-f4ece\",\n  storageBucket: \"edutech-f4ece.appspot.com\",\n  messagingSenderId: \"450823695942\",\n  appId:\n    \"1:450823695942:web:92480f6beeec66cf826447\",\n  measurementId: \"G-LKQRT84P1Q\",\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const db = getFirestore(app);\n","import { db } from \"../firebase-config\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst bookCollectionRef = collection(\n  db,\n  \"Assignments\"\n);\nclass BookDataService {\n  addBooks = (newBook) => {\n    return addDoc(bookCollectionRef, newBook);\n  };\n\n  updateBook = (id, updatedBook) => {\n    const bookDoc = doc(db, \"Assignments\", id);\n    return updateDoc(bookDoc, updatedBook);\n  };\n\n  deleteBook = (id) => {\n    const bookDoc = doc(db, \"Assignments\", id);\n    return deleteDoc(bookDoc);\n  };\n\n  getAllBooks = () => {\n    return getDocs(bookCollectionRef);\n  };\n\n  getBook = (id) => {\n    const bookDoc = doc(db, \"Assignments\", id);\n    return getDoc(bookDoc);\n  };\n}\n\nexport default new BookDataService();\n","import React, {\n  useState,\n  useEffect,\n} from \"react\";\nimport {\n  Form,\n  Alert,\n  InputGroup,\n  Button,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport BookDataService from \"../services/book.services\";\n\nconst AddBook = ({ id, setBookId }) => {\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [status, setStatus] = useState(\"Active\");\n  const [flag, setFlag] = useState(true);\n  const [message, setMessage] = useState({\n    error: false,\n    msg: \"\",\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    if (title === \"\" || author === \"\") {\n      setMessage({\n        error: true,\n        msg: \"All fields are mandatory!\",\n      });\n      return;\n    }\n    const newBook = {\n      title,\n      author,\n      date,\n      file,\n      status,\n    };\n    console.log(newBook);\n\n    try {\n      if (id !== undefined && id !== \"\") {\n        await BookDataService.updateBook(\n          id,\n          newBook\n        );\n        setBookId(\"\");\n        setMessage({\n          error: false,\n          msg: \"Updated successfully!\",\n        });\n      } else {\n        await BookDataService.addBooks(newBook);\n        setMessage({\n          error: false,\n          msg: \"New Task added successfully!\",\n        });\n      }\n    } catch (err) {\n      setMessage({\n        error: true,\n        msg: err.message,\n      });\n    }\n\n    setTitle(\"\");\n    setAuthor(\"\");\n    setDate(\"\");\n    setFile(\"\");\n  };\n\n  const editHandler = async () => {\n    setMessage(\"\");\n    try {\n      const docSnap =\n        await BookDataService.getBook(id);\n      console.log(\n        \"the record is :\",\n        docSnap.data()\n      );\n      setTitle(docSnap.data().title);\n      setAuthor(docSnap.data().author);\n      setDate(docSnap.data().date);\n      setFile(docSnap.data().file);\n      setStatus(docSnap.data().status);\n    } catch (err) {\n      setMessage({\n        error: true,\n        msg: err.message,\n      });\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"The id here is : \", id);\n    if (id !== undefined && id !== \"\") {\n      editHandler();\n    }\n  }, [id]);\n  return (\n    <>\n      <div className=\"p-4 box\">\n        {message?.msg && (\n          <Alert\n            variant={\n              message?.error\n                ? \"danger\"\n                : \"success\"\n            }\n            dismissible\n            onClose={() => setMessage(\"\")}\n          >\n            {message?.msg}\n          </Alert>\n        )}\n\n        <Form onSubmit={handleSubmit}>\n          <Form.Group\n            className=\"mb-3\"\n            controlId=\"formBookTitle\"\n          >\n            <InputGroup>\n              <InputGroup.Text id=\"formBookTitle\">\n                B\n              </InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Task Title\"\n                value={title}\n                onChange={(e) =>\n                  setTitle(e.target.value)\n                }\n              />\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group\n            className=\"mb-3\"\n            controlId=\"formBookAuthor\"\n          >\n            <InputGroup>\n              <InputGroup.Text id=\"formBookAuthor\">\n                A\n              </InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Task Author\"\n                value={author}\n                onChange={(e) =>\n                  setAuthor(e.target.value)\n                }\n              />\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group\n            className=\"mb-3\"\n            controlId=\"formBookAuthor\"\n          >\n            <InputGroup>\n              <InputGroup.Text id=\"formBookAuthor\">\n                C\n              </InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Submision Date\"\n                value={date}\n                onChange={(e) =>\n                  setDate(e.target.value)\n                }\n              />\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group\n            className=\"mb-3\"\n            controlId=\"formBookAuthor\"\n          >\n            <InputGroup>\n              <InputGroup.Text id=\"formBookAuthor\">\n                D\n              </InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Upload Task\"\n                value={file}\n                onChange={(e) =>\n                  setFile(e.target.value)\n                }\n              />\n            </InputGroup>\n          </Form.Group>\n          <ButtonGroup\n            aria-label=\"Basic example\"\n            className=\"mb-3\"\n          >\n            <div className=\"center\">\n              <Button\n                disabled={flag}\n                variant=\"light\"\n                onClick={(e) => {\n                  setStatus(\"Active\");\n                  setFlag(true);\n                }}\n              >\n                Active\n              </Button>\n              <Button\n                variant=\"dark\"\n                disabled={!flag}\n                onClick={(e) => {\n                  setStatus(\"Not Active\");\n                  setFlag(false);\n                }}\n              >\n                Not Active\n              </Button>\n            </div>\n          </ButtonGroup>\n          <div className=\"d-grid gap-2\">\n            <Button\n              variant=\"primary\"\n              type=\"Submit\"\n            >\n              Add/ Update\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default AddBook;\n","import React, {\n  useEffect,\n  useState,\n} from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport BookDataService from \"../services/book.services\";\n\nconst BooksList = ({ getBookId }) => {\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    getBooks();\n  }, []);\n\n  const getBooks = async () => {\n    const data =\n      await BookDataService.getAllBooks();\n    console.log(data.docs);\n    setBooks(\n      data.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }))\n    );\n  };\n\n  const deleteHandler = async (id) => {\n    await BookDataService.deleteBook(id);\n    getBooks();\n  };\n  return (\n    <>\n      <div className=\"mb-2\">\n        <Button\n          variant=\"dark edit\"\n          onClick={getBooks}\n        >\n          Refresh List\n        </Button>\n      </div>\n      {/* <pre>\n        {JSON.stringify(books, undefined, 2)}\n      </pre> */}\n\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Task Title</th>\n            <th>Task Author</th>\n            <th>Status</th>\n            <th>Date</th>\n            <th>Files</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {books.map((doc, index) => {\n            return (\n              <tr key={doc.id}>\n                <td>{index + 1}</td>\n                <td>{doc.subject}</td>\n                <td>{doc.author}</td>\n                <td>{doc.status}</td>\n                <td>{doc.date}</td>\n                <td>{doc.files}</td>\n                <td>\n                  <Button\n                    variant=\"secondary\"\n                    className=\"edit\"\n                    onClick={(e) =>\n                      getBookId(doc.id)\n                    }\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    variant=\"dark\"\n                    className=\"delete\"\n                    onClick={(e) =>\n                      deleteHandler(doc.id)\n                    }\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default BooksList;\n","import { useState } from \"react\";\nimport {\n  Container,\n  Navbar,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport AddBook from \"./components/AddBook\";\nimport BooksList from \"./components/BooksList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [bookId, setBookId] = useState(\"\");\n\n  const getBookIdHandler = (id) => {\n    console.log(\n      \"The ID of document to be edited: \",\n      id\n    );\n    setBookId(id);\n  };\n  return (\n    <>\n      <Navbar\n        bg=\"dark\"\n        variant=\"dark\"\n        className=\"header\"\n      >\n        <Container>\n          <Navbar.Brand href=\"#home\">\n            <img\n              className=\"Header-logo\"\n              src=\"/logo.png\"\n              alt=\"Logo\"\n            />\n            Teacher | Create Tasks\n          </Navbar.Brand>\n        </Container>\n      </Navbar>\n\n      <Container style={{ width: \"400px\" }}>\n        <Row>\n          <Col>\n            <AddBook\n              id={bookId}\n              setBookId={setBookId}\n            />\n          </Col>\n        </Row>\n      </Container>\n      <Container>\n        <Row>\n          <Col>\n            <BooksList\n              getBookId={getBookIdHandler}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}